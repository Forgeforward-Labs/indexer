type TokenFactory_FeeTokenCreated {
  id: ID!
  token: String!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimalPlaces: BigInt!
  transferTax: BigInt!
  owner: String!
}

type TokenFactory_StandardTokenCreated {
  id: ID!
  token: String!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimalPlaces: BigInt!
  owner: String!
}

enum TokenType {
  FEE
  STANDARD
}

type Tokens {
  id: ID!
  token: String!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimalPlaces: BigInt!
  owner: String!
  tokenType: TokenType!
  createdAt: BigInt!
  fee: BigInt
  transferTax: BigInt
}

type PlatformStats {
  id: ID! # Use "1" as the only ID for global stats
  totalTokens: BigInt
  totalTokenLockers: BigInt
  totalLPLockers: BigInt
  totalSales: BigInt
}

type Lock {
  id: ID!
  token: String!
  owner: String!
  lockingAmount: BigInt!
  lockTimeEnd: BigInt!
  projectImageUrl: String!
  createdAt: BigInt!
  lockAddress: String!
}
